package ru.crystals.set10.test.maincash;

import static ru.crystals.set10.pages.operday.OperDayPage.CASHES;
import static ru.crystals.set10.pages.operday.cashes.CashesPage.LOCATOR_MAINCASH_TAB;
import static ru.crystals.set10.pages.operday.cashes.CashDocsAbstractPage.*;
import static ru.crystals.set10.pages.operday.cashes.MainCashManualDocPage.*;

import java.util.Date;

import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import ru.crystals.set10.config.Config;
import ru.crystals.set10.pages.basic.LoginPage;
import ru.crystals.set10.pages.operday.cashes.CashesPage;
import ru.crystals.set10.pages.operday.cashes.MainCashDocsPage;
import ru.crystals.set10.pages.operday.cashes.MainCashManualDocPage;
import ru.crystals.set10.test.AbstractTest;
import ru.crystals.set10.utils.DisinsectorTools;

public class RKOTest extends AbstractTest {
	
	MainCashDocsPage docs;
	MainCashManualDocPage rko;
	int docsOnPage = 0;
	
	@BeforeClass
	public void setUp(){
		docs = new LoginPage(getDriver(), Config.RETAIL_URL)
		.openOperDay(Config.MANAGER, Config.MANAGER_PASSWORD)
		.navigatePage(CashesPage.class, CASHES)
		.openTab(MainCashDocsPage.class, LOCATOR_MAINCASH_TAB);
		
		docs.switchToTable(LOCATOR_DOCS);
		
		docsOnPage = docs.getDocCountOnPage();
		
	}
	
	
	@DataProvider
	public Object setUpRKOData(){
		return new Object[][]{
				{"", ""}	
		};
	}
	
	@Test(description = "SRTE-175. Добавление нового документа РКО.")
	public void testAddNewRKO(){
		rko = docs.addDoc();
		rko.setTextField(FIELD_DOC_SUM, "10,99")
			
			.setOperDayDate(FIELD_DATE_OPERDAY, DisinsectorTools.getDate("dd.MM.yy", new Date().getTime()))
			.saveChanges()
			.backToMainCash();
		Assert.assertEquals(docs.getDocCountOnPage(), docsOnPage + 1, "Документ РКО не добавился на вкладку главной кассы Документы");
	}
	
	
	//@Test(description = "SRTE-175. Автомтическое заполнение полей РКО")
	public void testRKOAutoGeneratedFields(){
	}
	
	//@Test(description = "SRTE-175. Изменение баланса при добавлении РКО")
	public void testRKOBalance(){
	}
	
	//@Test(description = "SRTE-175. Редактирование РКО, изменение баланса")
	public void testEditRKO(){
	}
	
	//@Test(description = "SRTE-175. Удалени РКО, изменение баланса")
	public void testDeleteRKO(){
	}
	
	
	//@Test(description = "SRTE-175. Печать РКО, сохранение полей и баланса в печатной форме")
	public void testPrintRKO(){
	}
	
	
	
	
	
	
}
