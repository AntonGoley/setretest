package ru.crystals.set10.test.maincash;

import java.util.Date;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;
import ru.crystals.set10.config.Config;
import ru.crystals.set10.pages.basic.LoginPage;
import ru.crystals.set10.pages.operday.cashes.CashesPage;
import ru.crystals.set10.pages.operday.cashes.MainCashDocsPage;
import ru.crystals.set10.pages.operday.cashes.MainCashManualDocPage;
import ru.crystals.set10.test.AbstractTest;
import ru.crystals.set10.utils.DisinsectorTools;
import static ru.crystals.set10.pages.operday.OperDayPage.CASHES;
import static ru.crystals.set10.pages.operday.cashes.CashesPage.LOCATOR_MAINCASH_TAB;
import static ru.crystals.set10.pages.operday.cashes.CashDocsAbstractPage.*;
import static ru.crystals.set10.pages.operday.cashes.MainCashManualDocPage.*;

public class RKOTest extends AbstractTest {
	
	MainCashDocsPage docs;
	MainCashManualDocPage rko;
	int docsOnPage = 0;
	
	@BeforeClass
	public void setUp(){
		docs = new LoginPage(getDriver(), Config.RETAIL_URL)
		.openOperDay(Config.MANAGER, Config.MANAGER_PASSWORD)
		.navigatePage(CashesPage.class, CASHES)
		.openTab(MainCashDocsPage.class, LOCATOR_MAINCASH_TAB);
		
		docs.switchToTable(LOCATOR_DOCS);
	}
	
	@DataProvider (name = "PKO")
	public Object[][] setUpRKOData(){
		return new Object[][]{
				{PKOtypes.PKO_DEBIT_FROM_COUNTERPARTIES},
				{PKOtypes.PKO_DEBIT_FROM_OTHER_COUNTERPARTIES},
				{PKOtypes.PKO_DEBIT_FROM_STORE_EMPLOYEES},
				{PKOtypes.PKO_FAILURE_TO_INVEST_ENCASHMENT},
				{PKOtypes.PKO_MONEY_CHANGE},
				{PKOtypes.PKO_SURPLUS_BY_CASH}
		};
	}
	
	@Test(description = "SRTE-175. Добавление нового документа Приходной кассовый ордер (ПКО) на вкладку \"Документы\" Главной кассы", 
			dataProvider = "PKO")
	public void testAddNewRKO(PKOtypes docType){
		docsOnPage = docs.getDocCountOnPage();
		rko = docs.addDoc();
		log.info("Добавление документа ПКО: " + docType);
		/* из списка ПКО, РКО выбирается текстовое представление PKOtypes */
		docs = rko.selectDocType(docType.toString())
			.setTextField(FIELD_DOC_SUM, DisinsectorTools.randomMoney(1000, ","))
			.setOperDayDate(FIELD_DATE_OPERDAY, DisinsectorTools.getDate("dd.MM.yy", new Date().getTime()))
			.saveChanges()
			.backToMainCash();
		Assert.assertEquals(docs.getDocCountOnPage(), docsOnPage + 1, "Документ РКО " + docType.toString() + " не добавился на вкладку главной кассы Документы");
		/* проверить увеличение баланса*/
		//Assert.assertEquals(docs.getDocCountOnPage(), docsOnPage + 1, "Документ РКО " + docType.toString() + " не добавился на вкладку главной кассы Документы");
	}
	
	
	//@Test(description = "SRTE-175. Автомтическое заполнение полей РКО")
	public void testRKOAutoGeneratedFields(){
	}
	
	//@Test(description = "SRTE-175. Редактирование РКО, изменение баланса")
	public void testEditRKO(){
	}
	
	//@Test(description = "SRTE-175. Удаление РКО, изменение баланса")
	public void testDeleteRKO(){
	}
	
	
	@Test(  enabled = true,
			description = "SRTE-175. Печать РКО, сохранение полей и баланса в печатной форме")
	public void testPrintRKO(){
		String headAccountant = "Главбухова О.А";
		String receivedBy = "Получилов И.И";
		String receivedFrom = "Вручалова Г.Г";
		String docNumber = "0";
		String sum = DisinsectorTools.randomMoney(1000, ",");
		String pkoType = PKOtypes.PKO_DEBIT_FROM_COUNTERPARTIES.toString();
				
		rko = docs.addDoc();
		log.info("Добавление документа ПКО: " + pkoType);
		rko.selectDocType(pkoType)
				.setTextField(FIELD_DOC_SUM, sum)
				.setOperDayDate(FIELD_DATE_OPERDAY, DisinsectorTools.getDate("dd.MM.yy", new Date().getTime()))
				.setTextField(FIELD_HEAD_ACCOUNTANT, headAccountant)
				.setTextField(FIELD_RECEIVED_FROM, receivedFrom)
				.setTextField(FIELD_PERSON_RECEIVED, receivedBy)
				.saveChanges();

		docs = rko.backToMainCash();
		
		
		
	}
	
	
	
	
	
	
}
